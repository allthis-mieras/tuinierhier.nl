---
import Tag from "./Tag.astro";

export interface Props {
  href: string;
  title: string;
  description: string;
  imageSrc: string;
  imageAlt: string;
}

const { href, title, description, imageSrc, imageAlt } = Astro.props;
---

<article class="card relative grid gap-[var(--space-3xs)] justify-items-start">
  <figure class="w-full">
    <img
      src={imageSrc}
      alt={imageAlt}
      loading="lazy"
      class="block w-full h-auto rounded-xl overflow-hidden mb-[var(--space-xs)]"
    />
  </figure>
  {
    Astro.slots.has("meta") && (
      <Tag
        variant="default"
        class="mb-0 text-[length:var(--step--2)] border-none"
      >
        <slot name="meta" />
      </Tag>
    )
  }
  <h4
    class="text-[length:var(--step-1)] font-bold leading-[120%] mt-[var(--space-1xs)] mb-0"
  >
    <a
      href={href}
      class="card__link inline-block no-underline text-inherit focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-[var(--clr-yellow)]"
    >
      {title}
    </a>
  </h4>
  <p class="font-semibold text-[length:var(--step--2)] leading-relaxed mt-0">
    {description}
  </p>
</article>

<style>
  .card {
    position: relative;
  }

  .card__link {
    position: static;
    color: inherit;
    text-decoration: none;
    z-index: 1;
  }

  .card__link::before {
    content: "";
    position: absolute;
    inset: 0;
    z-index: 1;
    border: 2px solid transparent;
    border-radius: var(--radius-lg);
    transition: border-color 200ms ease;
    cursor: pointer;
  }

  .card:hover .card__link::before,
  .card:focus-within .card__link::before {
    border-color: var(--clr-yellow);
  }
</style>
